class Solution {
public:
    void sortColors(vector<int>& nums) {
      /*M3  sort(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=0;i<n;i++){
           cout<<nums[i]<<" "; 
        }
      */     
        // m2 without sort builtin fun and extra space
      /*  int ones=0,zeros=0,twos=0;
        for(int i=nums.size()-1;i>=0;i--){
            if(nums[i]==0){
                zeros++;
                nums.pop_back();
            }
            else
            if(nums[i]==1){
                ones++;
                nums.pop_back();
            }else
                if(nums[i]==2){
                    twos++;
                    nums.pop_back();
                }
        }
        while(zeros--){
            nums.push_back(0);
        }
        while(ones--){
            nums.push_back(1);
        }
        while(twos--){
            nums.push_back(2);
        }
       */
        // M3 using Dutch national flag alg---> 3 pointers low =0,mid=0,high=n-1(initially)
        int l=0,m=0,h=nums.size()-1;
        while(m<=h){
            if(nums[m]==0){
                swap(nums[l],nums[m]);
                l++,m++;
            }
            else
                if(nums[m]==1)m++;
            else
                if(nums[m]==2){
                    swap(nums[m],nums[h]);
                    h--;
                }
        }
        
    }
};
